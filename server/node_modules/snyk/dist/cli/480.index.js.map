{"version":3,"file":"480.index.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yCAAyC,GAAG;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,YAAY,QAAQ;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACplBA,2CAA0B;AAC1B,sCAAyB;AACzB,yCAA+B;AAC/B,4CAAiC;AACjC,mDAAgE;AAChE,sDAAiE;AASjE,0CAA8C;AAC9C,0CAA8C;AAE9C,2CAAgD;AAChD,6CAAoD;AAEpD,+CAA+D;AAC/D,gDAAgF;AAChF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","sources":["webpack://snyk/./node_modules/lodash.camelcase/index.js","webpack://snyk/./src/cli/commands/monitor/index.ts","webpack://snyk/./src/cli/commands/monitor/process-json-monitor.ts","webpack://snyk/./src/cli/commands/process-command-args.ts","webpack://snyk/./src/lib/monitor/dev-count-analysis.ts"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n","export = monitor;\n\nimport chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as Debug from 'debug';\nimport * as pathUtil from 'path';\nimport { legacyPlugin as pluginApi } from '@snyk/cli-interface';\nimport { validateOptions } from '../../../lib/options-validator';\n\nimport {\n  MonitorOptions,\n  MonitorMeta,\n  MonitorResult,\n  Options,\n  Contributor,\n} from '../../../lib/types';\nimport * as config from '../../../lib/config';\nimport * as detect from '../../../lib/detect';\nimport { GoodResult, BadResult } from './types';\nimport * as spinner from '../../../lib/spinner';\nimport * as analytics from '../../../lib/analytics';\nimport { MethodArgs } from '../../args';\nimport { apiOrOAuthTokenExists } from '../../../lib/api-token';\nimport { maybePrintDepTree, maybePrintDepGraph } from '../../../lib/print-deps';\nimport { monitor as snykMonitor } from '../../../lib/monitor';\nimport { processJsonMonitorResponse } from './process-json-monitor';\nimport snyk = require('../../../lib'); // TODO(kyegupov): fix import\nimport { formatMonitorOutput } from '../../../lib/formatters';\nimport { getDepsFromPlugin } from '../../../lib/plugins/get-deps-from-plugin';\nimport { getExtraProjectCount } from '../../../lib/plugins/get-extra-project-count';\nimport { extractPackageManager } from '../../../lib/plugins/extract-package-manager';\nimport { MultiProjectResultCustom } from '../../../lib/plugins/get-multi-plugin-result';\nimport { convertMultiResultToMultiCustom } from '../../../lib/plugins/convert-multi-plugin-res-to-multi-custom';\nimport { convertSingleResultToMultiCustom } from '../../../lib/plugins/convert-single-splugin-res-to-multi-custom';\nimport { PluginMetadata } from '@snyk/cli-interface/legacy/plugin';\nimport { getContributors } from '../../../lib/monitor/dev-count-analysis';\nimport {\n  FailedToRunTestError,\n  MonitorError,\n  MissingArgError,\n} from '../../../lib/errors';\nimport { isMultiProjectScan } from '../../../lib/is-multi-project-scan';\nimport { getEcosystem, monitorEcosystem } from '../../../lib/ecosystems';\nimport { getFormattedMonitorOutput } from '../../../lib/ecosystems/monitor';\nimport { processCommandArgs } from '../process-command-args';\n\nconst SEPARATOR = '\\n-------------------------------------------------------\\n';\nconst debug = Debug('snyk');\n\n// This is used instead of `let x; try { x = await ... } catch { cleanup }` to avoid\n// declaring the type of x as possibly undefined.\nasync function promiseOrCleanup<T>(\n  p: Promise<T>,\n  cleanup: (x?) => void,\n): Promise<T> {\n  return p.catch((error) => {\n    cleanup();\n    throw error;\n  });\n}\n\n// Returns an array of Registry responses (one per every sub-project scanned), a single response,\n// or an error message.\nasync function monitor(...args0: MethodArgs): Promise<any> {\n  const { options, paths } = processCommandArgs(...args0);\n  const results: Array<GoodResult | BadResult> = [];\n\n  if (options.id) {\n    snyk.id = options.id;\n  }\n\n  if (options.allSubProjects && options['project-name']) {\n    throw new Error(\n      '`--all-sub-projects` is currently not compatible with `--project-name`',\n    );\n  }\n\n  if (options.docker && options['remote-repo-url']) {\n    throw new Error('`--remote-repo-url` is not supported for container scans');\n  }\n\n  // Handles no image arg provided to the container command until\n  // a validation interface is implemented in the docker plugin.\n  if (options.docker && paths.length === 0) {\n    throw new MissingArgError();\n  }\n\n  apiOrOAuthTokenExists();\n\n  let contributors: Contributor[] = [];\n  if (!options.docker && analytics.allowAnalytics()) {\n    try {\n      contributors = await getContributors();\n    } catch (err) {\n      debug('error getting repo contributors', err);\n    }\n  }\n\n  const ecosystem = getEcosystem(options);\n  if (ecosystem) {\n    const commandResult = await monitorEcosystem(ecosystem, paths, options);\n\n    const [monitorResults, monitorErrors] = commandResult;\n\n    return await getFormattedMonitorOutput(\n      results,\n      monitorResults,\n      monitorErrors,\n      options,\n    );\n  }\n\n  // Part 1: every argument is a scan target; process them sequentially\n  for (const path of paths) {\n    debug(`Processing ${path}...`);\n    try {\n      validateMonitorPath(path, options.docker);\n      let analysisType = 'all';\n      let packageManager;\n      if (isMultiProjectScan(options)) {\n        analysisType = 'all';\n      } else if (options.docker) {\n        analysisType = 'docker';\n      } else {\n        packageManager = detect.detectPackageManager(path, options);\n      }\n\n      await validateOptions(\n        options as Options & MonitorOptions,\n        packageManager,\n      );\n\n      const targetFile =\n        !options.scanAllUnmanaged && options.docker && !options.file // snyk monitor --docker (without --file)\n          ? undefined\n          : options.file || detect.detectPackageFile(path);\n\n      const displayPath = pathUtil.relative(\n        '.',\n        pathUtil.join(path, targetFile || ''),\n      );\n\n      const analyzingDepsSpinnerLabel =\n        'Analyzing ' +\n        (packageManager ? packageManager : analysisType) +\n        ' dependencies for ' +\n        displayPath;\n\n      await spinner(analyzingDepsSpinnerLabel);\n\n      // Scan the project dependencies via a plugin\n      debug('getDepsFromPlugin ...');\n\n      // each plugin will be asked to scan once per path\n      // some return single InspectResult & newer ones return Multi\n      const inspectResult = await promiseOrCleanup(\n        getDepsFromPlugin(path, {\n          ...options,\n          path,\n          packageManager,\n        }),\n        spinner.clear(analyzingDepsSpinnerLabel),\n      );\n      analytics.add('pluginName', inspectResult.plugin.name);\n\n      // We send results from \"all-sub-projects\" scanning as different Monitor objects\n      // multi result will become default, so start migrating code to always work with it\n      let perProjectResult: MultiProjectResultCustom;\n\n      if (!pluginApi.isMultiResult(inspectResult)) {\n        perProjectResult = convertSingleResultToMultiCustom(inspectResult);\n      } else {\n        perProjectResult = convertMultiResultToMultiCustom(inspectResult);\n      }\n\n      const failedResults = (inspectResult as MultiProjectResultCustom)\n        .failedResults;\n      if (failedResults?.length) {\n        failedResults.forEach((result) => {\n          results.push({\n            ok: false,\n            data: new MonitorError(500, result.errMessage),\n            path: result.targetFile || '',\n          });\n        });\n      }\n\n      const postingMonitorSpinnerLabel =\n        'Posting monitor snapshot for ' + displayPath + ' ...';\n      await spinner(postingMonitorSpinnerLabel);\n\n      // Post the project dependencies to the Registry\n      for (const projectDeps of perProjectResult.scannedProjects) {\n        try {\n          if (!projectDeps.depGraph && !projectDeps.depTree) {\n            debug(\n              'scannedProject is missing depGraph or depTree, cannot run test/monitor',\n            );\n            throw new FailedToRunTestError(\n              'Your monitor request could not be completed. Please email support@snyk.io',\n            );\n          }\n          const extractedPackageManager = extractPackageManager(\n            projectDeps,\n            perProjectResult,\n            options as MonitorOptions & Options,\n          );\n\n          analytics.add('packageManager', extractedPackageManager);\n\n          const projectName = getProjectName(projectDeps);\n          if (projectDeps.depGraph) {\n            debug(`Processing ${projectDeps.depGraph.rootPkg?.name}...`);\n            maybePrintDepGraph(options, projectDeps.depGraph);\n          }\n\n          if (projectDeps.depTree) {\n            debug(`Processing ${projectDeps.depTree.name}...`);\n            maybePrintDepTree(options, projectDeps.depTree);\n          }\n\n          const tFile = projectDeps.targetFile || targetFile;\n          const targetFileRelativePath =\n            projectDeps.plugin.targetFile ||\n            (tFile && pathUtil.join(pathUtil.resolve(path), tFile)) ||\n            '';\n\n          const res: MonitorResult = await promiseOrCleanup(\n            snykMonitor(\n              path,\n              generateMonitorMeta(options, extractedPackageManager),\n              projectDeps,\n              options,\n              projectDeps.plugin as PluginMetadata,\n              targetFileRelativePath,\n              contributors,\n            ),\n            spinner.clear(postingMonitorSpinnerLabel),\n          );\n\n          res.path = path;\n          const monOutput = formatMonitorOutput(\n            extractedPackageManager,\n            res,\n            options,\n            projectName,\n            await getExtraProjectCount(path, options, inspectResult),\n          );\n          // push a good result\n          results.push({ ok: true, data: monOutput, path, projectName });\n        } catch (err) {\n          // pushing this error allow this inner loop to keep scanning the projects\n          // even if 1 in 100 fails\n          results.push({ ok: false, data: err, path });\n        }\n      }\n    } catch (err) {\n      // push this error, the loop continues\n      results.push({ ok: false, data: err, path });\n    } finally {\n      spinner.clearAll();\n    }\n  }\n  // Part 2: process the output from the Registry\n  if (options.json) {\n    return processJsonMonitorResponse(results);\n  }\n\n  const output = results\n    .map((res) => {\n      if (res.ok) {\n        return res.data;\n      }\n\n      const errorMessage =\n        res.data && res.data.userMessage\n          ? chalk.bold.red(res.data.userMessage)\n          : res.data\n          ? res.data.message\n          : 'Unknown error occurred.';\n\n      return (\n        chalk.bold.white('\\nMonitoring ' + res.path + '...\\n\\n') + errorMessage\n      );\n    })\n    .join('\\n' + SEPARATOR);\n\n  if (results.every((res) => res.ok)) {\n    return output;\n  }\n\n  throw new Error(output);\n}\n\nfunction generateMonitorMeta(options, packageManager?): MonitorMeta {\n  return {\n    method: 'cli',\n    packageManager,\n    'policy-path': options['policy-path'],\n    'project-name': options['project-name'] || config.PROJECT_NAME,\n    isDocker: !!options.docker,\n    prune: !!options.pruneRepeatedSubdependencies,\n    'experimental-dep-graph': !!options['experimental-dep-graph'],\n    'remote-repo-url': options['remote-repo-url'],\n  };\n}\n\nfunction validateMonitorPath(path: string, isDocker?: boolean): void {\n  const exists = fs.existsSync(path);\n  if (!exists && !isDocker) {\n    throw new Error('\"' + path + '\" is not a valid path for \"snyk monitor\"');\n  }\n}\n\nfunction getProjectName(projectDeps): string {\n  return (\n    projectDeps.meta?.gradleProjectName ||\n    projectDeps.depGraph?.rootPkg?.name ||\n    projectDeps.depTree?.name\n  );\n}\n","import { GoodResult, BadResult } from './types';\n\nexport function processJsonMonitorResponse(\n  results: Array<GoodResult | BadResult>,\n): string {\n  let dataToSend = results.map((result) => {\n    if (result.ok) {\n      const jsonData = JSON.parse(result.data);\n      if (result.projectName) {\n        jsonData.projectName = result.projectName;\n      }\n      return jsonData;\n    }\n    return { ok: false, error: result.data.message, path: result.path };\n  });\n  // backwards compat - strip array if only one result\n  dataToSend = dataToSend.length === 1 ? dataToSend[0] : dataToSend;\n  const stringifiedData = JSON.stringify(dataToSend, null, 2);\n\n  if (results.every((res) => res.ok)) {\n    return stringifiedData;\n  }\n  const err = new Error(stringifiedData) as any;\n  err.json = stringifiedData;\n  throw err;\n}\n","import { Options } from '../../lib/types';\n\nexport function processCommandArgs<CommandOptions>(\n  ...args\n): { paths: string[]; options: Options & CommandOptions } {\n  let options = ({} as any) as Options & CommandOptions;\n\n  if (typeof args[args.length - 1] === 'object') {\n    options = (args.pop() as any) as Options & CommandOptions;\n  }\n  args = args.filter(Boolean);\n\n  // For repository scanning, populate with default path (cwd) if no path given\n  if (args.length === 0 && !options.docker) {\n    args.unshift(process.cwd());\n  }\n\n  return { options, paths: args };\n}\n","/**\n * This is to count the number of \"contributing\" developers using Snyk on a given repo.\n * \"Contributing\" is defined as having contributed a commit in the last 90 days.\n * This is use only on the `snyk monitor` command as that is used to monitor a project's dependencies in an\n * on-going manner.\n * It collects only a hash of the email of a git user and the most recent commit timestamp (both per the `git log`\n * output) and can be disabled by config (see https://snyk.io/policies/tracking-and-analytics/).\n */\nimport * as crypto from 'crypto';\nimport { exec } from 'child_process';\nimport { Contributor } from '../types';\n\nexport const SERIOUS_DELIMITER = '_SNYK_SEPARATOR_';\nexport const CONTRIBUTING_DEVELOPER_PERIOD_DAYS = 90;\n// Limit the number of commits returned from `git log` command to stay within maxBuffer limit\nexport const MAX_COMMITS_IN_GIT_LOG = 500;\n\nexport async function getContributors(\n  { endDate, periodDays, repoPath } = {\n    endDate: new Date(),\n    periodDays: CONTRIBUTING_DEVELOPER_PERIOD_DAYS,\n    repoPath: process.cwd(),\n  },\n): Promise<Contributor[]> {\n  const timestampStartOfContributingDeveloperPeriod = getTimestampStartOfContributingDevTimeframe(\n    endDate,\n    periodDays,\n  );\n  const gitLogResults = await runGitLog(\n    timestampStartOfContributingDeveloperPeriod,\n    Math.floor(endDate.getTime() / 1000),\n    repoPath,\n    execShell,\n  );\n  const stats: GitRepoCommitStats = parseGitLog(gitLogResults);\n  return stats.getRepoContributors();\n}\n\nexport class GitCommitInfo {\n  authorHashedEmail: string;\n  commitTimestamp: string; // use ISO 8601 format\n\n  constructor(authorHashedEmail: string, commitTimestamp: string) {\n    if (isSha1Hash(authorHashedEmail)) {\n      this.authorHashedEmail = authorHashedEmail;\n      this.commitTimestamp = commitTimestamp;\n    } else {\n      throw new Error('authorHashedEmail must be a sha1 hash');\n    }\n  }\n}\n\nexport class GitRepoCommitStats {\n  commitInfos: GitCommitInfo[];\n\n  constructor(commitInfos: GitCommitInfo[]) {\n    this.commitInfos = commitInfos;\n  }\n\n  public static empty(): GitRepoCommitStats {\n    return new GitRepoCommitStats([]);\n  }\n\n  public addCommitInfo(info: GitCommitInfo) {\n    this.commitInfos.push(info);\n  }\n\n  public getUniqueAuthorsCount(): number {\n    const uniqueAuthorHashedEmails = this.getUniqueAuthorHashedEmails();\n    return uniqueAuthorHashedEmails.size;\n  }\n\n  public getCommitsCount(): number {\n    return this.commitInfos.length;\n  }\n\n  public getUniqueAuthorHashedEmails(): Set<string> {\n    const allCommitAuthorHashedEmails: string[] = this.commitInfos.map(\n      (c) => c.authorHashedEmail,\n    );\n    const uniqueAuthorHashedEmails: Set<string> = new Set(\n      allCommitAuthorHashedEmails,\n    );\n    return uniqueAuthorHashedEmails;\n  }\n\n  public getRepoContributors(): Contributor[] {\n    const uniqueAuthorHashedEmails = this.getUniqueAuthorHashedEmails();\n    const contributors: Contributor[] = [];\n\n    // for each uniqueAuthorHashedEmails, get the latest commit\n    for (const nextUniqueAuthorHashedEmail of uniqueAuthorHashedEmails) {\n      const latestCommitTimestamp = this.getMostRecentCommitTimestamp(\n        nextUniqueAuthorHashedEmail,\n      );\n      contributors.push({\n        userId: nextUniqueAuthorHashedEmail,\n        lastCommitDate: latestCommitTimestamp,\n      });\n    }\n    return contributors;\n  }\n\n  public getMostRecentCommitTimestamp(authorHashedEmail: string): string {\n    for (const nextGI of this.commitInfos) {\n      if (nextGI.authorHashedEmail === authorHashedEmail) {\n        return nextGI.commitTimestamp;\n      }\n    }\n    return '';\n  }\n}\n\nexport function parseGitLogLine(logLine: string): GitCommitInfo {\n  const lineComponents = logLine.split(SERIOUS_DELIMITER);\n  const authorEmail = lineComponents[2];\n  const commitTimestamp = lineComponents[3];\n  const hashedAuthorEmail = hashData(authorEmail);\n  const commitInfo = new GitCommitInfo(hashedAuthorEmail, commitTimestamp);\n  return commitInfo;\n}\n\nexport function parseGitLog(gitLog: string): GitRepoCommitStats {\n  if (gitLog.trim() === '') {\n    return GitRepoCommitStats.empty();\n  }\n  const logLines = separateLines(gitLog);\n  const logLineInfos: GitCommitInfo[] = logLines.map(parseGitLogLine);\n  const stats: GitRepoCommitStats = new GitRepoCommitStats(logLineInfos);\n  return stats;\n}\n\nexport function hashData(s: string): string {\n  const hashedData = crypto\n    .createHash('sha1')\n    .update(s)\n    .digest('hex');\n  return hashedData;\n}\n\nexport function isSha1Hash(data: string): boolean {\n  // sha1 hash must be exactly 40 characters of 0-9 / a-f (i.e. lowercase hex characters)\n  // ^ == start anchor\n  // [0-9a-f] == characters 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f only\n  // {40} 40 of the [0-9a-f] characters\n  // $ == end anchor\n  const matchRegex = new RegExp('^[0-9a-f]{40}$');\n  const looksHashed = matchRegex.test(data);\n  return looksHashed;\n}\n\n/**\n * @returns time stamp in seconds-since-epoch of 90 days ago since 90 days is the \"contributing devs\" timeframe\n */\nexport function getTimestampStartOfContributingDevTimeframe(\n  dNow: Date,\n  timespanInDays: number = CONTRIBUTING_DEVELOPER_PERIOD_DAYS,\n): number {\n  const nowUtcEpocMS = dNow.getTime();\n  const nowUtcEpocS = Math.floor(nowUtcEpocMS / 1000);\n  const ONE_DAY_IN_SECONDS = 86400;\n  const lookbackTimespanSeconds = timespanInDays * ONE_DAY_IN_SECONDS;\n  const startOfPeriodEpochSeconds = nowUtcEpocS - lookbackTimespanSeconds;\n  return startOfPeriodEpochSeconds;\n}\n\nexport async function runGitLog(\n  timestampEpochSecondsStartOfPeriod: number,\n  timestampEpochSecondsEndOfPeriod: number,\n  repoPath: string,\n  fnShellout: (cmd: string, workingDirectory: string) => Promise<string>,\n): Promise<string> {\n  try {\n    const gitLogCommand = `git --no-pager log --no-merges --pretty=tformat:\"%H${SERIOUS_DELIMITER}%an${SERIOUS_DELIMITER}%ae${SERIOUS_DELIMITER}%aI\" --after=\"${timestampEpochSecondsStartOfPeriod}\" --until=\"${timestampEpochSecondsEndOfPeriod}\" --max-count=${MAX_COMMITS_IN_GIT_LOG}`;\n    const gitLogStdout: string = await fnShellout(gitLogCommand, repoPath);\n    return gitLogStdout;\n  } catch {\n    return '';\n  }\n}\n\nexport function separateLines(inputText: string): string[] {\n  const linuxStyleNewLine = '\\n';\n  const windowsStyleNewLine = '\\r\\n';\n  const reg = new RegExp(`${linuxStyleNewLine}|${windowsStyleNewLine}`);\n  const lines = inputText.trim().split(reg);\n  return lines;\n}\n\nexport function execShell(\n  cmd: string,\n  workingDirectory: string,\n): Promise<string> {\n  const options = {\n    cwd: workingDirectory,\n  };\n\n  return new Promise((resolve, reject) => {\n    exec(cmd, options, (error, stdout, stderr) => {\n      if (error) {\n        const exitCode = error.code;\n\n        const e = new ShellOutError(\n          error.message,\n          exitCode,\n          stdout,\n          stderr,\n          error,\n        );\n        reject(e);\n      } else {\n        resolve(stdout ? stdout : stderr);\n      }\n    });\n  });\n}\n\nexport class ShellOutError extends Error {\n  public innerError: Error | undefined;\n  public exitCode: number | undefined;\n  public stdout: string | undefined;\n  public stderr: string | undefined;\n\n  constructor(\n    message: string,\n    exitCode: number | undefined,\n    stdout: string,\n    stderr: string,\n    innerError: Error | undefined,\n  ) {\n    super(message);\n    this.exitCode = exitCode;\n    this.stdout = stdout;\n    this.stderr = stderr;\n    this.innerError = innerError;\n  }\n}\n"],"names":[],"sourceRoot":""}